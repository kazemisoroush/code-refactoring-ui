name: CI/CD

on:
  push:
    branches:
      - main
      - '**' # All branches
  pull_request:
    branches:
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install make (if not available)
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Run CI pipeline
        run: make ci

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-files
          path: build/
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install make (if not available)
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Install dependencies
        run: npm install

      - name: Configure AWS credentials
        if: ${{ vars.AWS_ROLE_ARN != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Build project
        run: make build

      - name: Sync build/ to S3
        if: ${{ vars.AWS_S3_BUCKET != '' }}
        run: |
          aws s3 sync build/ s3://${{ vars.AWS_S3_BUCKET }} --delete

      - name: Invalidate CloudFront (optional)
        if: ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID != '' }}
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ vars.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
